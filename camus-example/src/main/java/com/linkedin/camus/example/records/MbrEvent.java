/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.camus.example.records;  
@SuppressWarnings("all")
/** LivePErson event */
public class MbrEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MbrEvent\",\"namespace\":\"com.linkedin.camus.example.records\",\"doc\":\"LivePErson event\",\"fields\":[{\"name\":\"time\",\"type\":\"string\"},{\"name\":\"rawRequest\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence time;
  @Deprecated public java.lang.CharSequence rawRequest;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return rawRequest;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.CharSequence)value$; break;
    case 1: rawRequest = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time' field.
   */
  public java.lang.CharSequence getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.CharSequence value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'rawRequest' field.
   */
  public java.lang.CharSequence getRawRequest() {
    return rawRequest;
  }

  /**
   * Sets the value of the 'rawRequest' field.
   * @param value the value to set.
   */
  public void setRawRequest(java.lang.CharSequence value) {
    this.rawRequest = value;
  }

  /** Creates a new MbrEvent RecordBuilder */
  public static com.linkedin.camus.example.records.MbrEvent.Builder newBuilder() {
    return new com.linkedin.camus.example.records.MbrEvent.Builder();
  }
  
  /** Creates a new MbrEvent RecordBuilder by copying an existing Builder */
  public static com.linkedin.camus.example.records.MbrEvent.Builder newBuilder(com.linkedin.camus.example.records.MbrEvent.Builder other) {
    return new com.linkedin.camus.example.records.MbrEvent.Builder(other);
  }
  
  /** Creates a new MbrEvent RecordBuilder by copying an existing MbrEvent instance */
  public static com.linkedin.camus.example.records.MbrEvent.Builder newBuilder(com.linkedin.camus.example.records.MbrEvent other) {
    return new com.linkedin.camus.example.records.MbrEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for MbrEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MbrEvent>
    implements org.apache.avro.data.RecordBuilder<MbrEvent> {

    private java.lang.CharSequence time;
    private java.lang.CharSequence rawRequest;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.camus.example.records.MbrEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.camus.example.records.MbrEvent.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing MbrEvent instance */
    private Builder(com.linkedin.camus.example.records.MbrEvent other) {
            super(com.linkedin.camus.example.records.MbrEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rawRequest)) {
        this.rawRequest = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.rawRequest);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'time' field */
    public java.lang.CharSequence getTime() {
      return time;
    }
    
    /** Sets the value of the 'time' field */
    public com.linkedin.camus.example.records.MbrEvent.Builder setTime(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'time' field */
    public com.linkedin.camus.example.records.MbrEvent.Builder clearTime() {
      time = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'rawRequest' field */
    public java.lang.CharSequence getRawRequest() {
      return rawRequest;
    }
    
    /** Sets the value of the 'rawRequest' field */
    public com.linkedin.camus.example.records.MbrEvent.Builder setRawRequest(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.rawRequest = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'rawRequest' field has been set */
    public boolean hasRawRequest() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'rawRequest' field */
    public com.linkedin.camus.example.records.MbrEvent.Builder clearRawRequest() {
      rawRequest = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public MbrEvent build() {
      try {
        MbrEvent record = new MbrEvent();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.rawRequest = fieldSetFlags()[1] ? this.rawRequest : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
